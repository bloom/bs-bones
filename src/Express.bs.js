// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Express = require("express");
var Js_option = require("bs-platform/lib/js/js_option.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var BodyParser = require("body-parser");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

var $$Error = /* module */[];

function bodyText(req) {
  var body = req.body;
  if (Js_json.test(body, /* String */0)) {
    return body;
  }
  
}

function decodeStringDict(json) {
  return Js_option.andThen((function (obj) {
                var allStrings = $$Array.fold_left((function (prev, value) {
                        if (prev) {
                          return Js_json.test(value, /* String */0);
                        } else {
                          return false;
                        }
                      }), true, Js_dict.values(obj));
                if (allStrings) {
                  return Caml_option.some(obj);
                }
                
              }), Js_json.decodeObject(json));
}

function bodyURLEncoded(req) {
  return decodeStringDict(req.body);
}

function httpMethod(req) {
  var s = req.method;
  switch (s) {
    case "CONNECT" : 
        return /* Connect */7;
    case "DELETE" : 
        return /* Delete */3;
    case "GET" : 
        return /* Get */0;
    case "HEAD" : 
        return /* Head */4;
    case "OPTIONS" : 
        return /* Options */5;
    case "PATCH" : 
        return /* Patch */8;
    case "POST" : 
        return /* Post */1;
    case "PUT" : 
        return /* Put */2;
    case "TRACE" : 
        return /* Trace */6;
    default:
      return Pervasives.failwith("Express.Request.method_ Unexpected method: " + s);
  }
}

function protocol(req) {
  var s = req.protocol;
  switch (s) {
    case "http" : 
        return /* Http */0;
    case "https" : 
        return /* Https */1;
    default:
      return Pervasives.failwith("Express.Request.protocol, Unexpected protocol: " + s);
  }
}

function accepts(types, req) {
  var ret = req.accepts(types);
  var tagged_t = Js_json.classify(ret);
  if (typeof tagged_t === "number" || tagged_t.tag) {
    return undefined;
  } else {
    return tagged_t[0];
  }
}

function acceptsCharsets(types, req) {
  var ret = req.acceptsCharsets(types);
  var tagged_t = Js_json.classify(ret);
  if (typeof tagged_t === "number" || tagged_t.tag) {
    return undefined;
  } else {
    return tagged_t[0];
  }
}

var $$Request = /* module */[
  /* bodyText */bodyText,
  /* decodeStringDict */decodeStringDict,
  /* bodyURLEncoded */bodyURLEncoded,
  /* httpMethod */httpMethod,
  /* protocol */protocol,
  /* accepts */accepts,
  /* acceptsCharsets */acceptsCharsets
];

var jsMapperConstantArray = /* array */[
  200,
  201,
  202,
  203,
  204,
  205,
  206,
  207,
  208,
  226,
  300,
  301,
  302,
  303,
  304,
  305,
  306,
  307,
  308,
  400,
  401,
  402,
  403,
  404,
  405,
  406,
  407,
  408,
  409,
  410,
  411,
  412,
  413,
  414,
  415,
  416,
  417,
  418,
  421,
  422,
  423,
  424,
  426,
  428,
  429,
  431,
  451,
  500,
  501,
  502,
  503,
  504,
  505,
  506,
  507,
  508,
  510,
  511
];

function tToJs(param) {
  return Js_mapperRt.toInt(param, jsMapperConstantArray);
}

function tFromJs(param) {
  return Js_mapperRt.fromInt(58, jsMapperConstantArray, param);
}

var StatusCode = /* module */[
  /* tToJs */tToJs,
  /* tFromJs */tFromJs,
  /* fromInt */tFromJs,
  /* toInt */tToJs
];

var jsMapperConstantArray$1 = /* array */[
  /* tuple */[
    -976972951,
    "strict"
  ],
  /* tuple */[
    3801155,
    "lax"
  ]
];

function sameSiteToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$1);
}

function sameSiteFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$1, param);
}

function filterKeys(obj) {
  return Js_dict.fromArray(Js_dict.entries(obj).filter((function (param) {
                    return !(param[1] == null);
                  })));
}

function cookie(name, maxAge, expiresGMT, httpOnly, secure, signed, path, sameSite, value, response) {
  response.cookie(name, value, filterKeys({
            maxAge: Js_null_undefined.fromOption(maxAge),
            expires: Js_null_undefined.fromOption(expiresGMT),
            path: Js_null_undefined.fromOption(path),
            httpOnly: Js_null_undefined.fromOption(httpOnly),
            secure: Js_null_undefined.fromOption(secure),
            sameSite: Js_null_undefined.fromOption(Js_option.map((function (x) {
                        return Js_mapperRt.binarySearch(2, x, jsMapperConstantArray$1);
                      }), sameSite)),
            signed: Js_null_undefined.fromOption(signed)
          }));
  return response;
}

function clearCookie(name, httpOnly, secure, signed, $staropt$star, sameSite, response) {
  var path = $staropt$star !== undefined ? $staropt$star : "/";
  response.clearCookie(name, filterKeys({
            maxAge: undefined,
            expires: undefined,
            path: path,
            httpOnly: Js_null_undefined.fromOption(httpOnly),
            secure: Js_null_undefined.fromOption(secure),
            sameSite: Js_null_undefined.fromOption(Js_option.map((function (x) {
                        return Js_mapperRt.binarySearch(2, x, jsMapperConstantArray$1);
                      }), sameSite)),
            signed: Js_null_undefined.fromOption(signed)
          }));
  return response;
}

function sendStatus(statusCode) {
  var partial_arg = Js_mapperRt.toInt(statusCode, jsMapperConstantArray);
  return (function (param) {
      return param.sendStatus(partial_arg);
    });
}

function status(statusCode) {
  var partial_arg = Js_mapperRt.toInt(statusCode, jsMapperConstantArray);
  return (function (param) {
      return param.status(partial_arg);
    });
}

var $$Response = /* module */[
  /* StatusCode */StatusCode,
  /* sameSiteToJs */sameSiteToJs,
  /* sameSiteFromJs */sameSiteFromJs,
  /* filterKeys */filterKeys,
  /* cookie */cookie,
  /* clearCookie */clearCookie,
  /* sendStatus */sendStatus,
  /* status */status
];

function error(e) {
  return e;
}

var Next = /* module */[
  /* middleware */undefined,
  /* route */"route",
  /* error */error
];

function b(param_0) {
  return /* B */Block.__(0, [param_0]);
}

function kb(param_0) {
  return /* Kb */Block.__(1, [param_0]);
}

function mb(param_0) {
  return /* Mb */Block.__(2, [param_0]);
}

function gb(param_0) {
  return /* Gb */Block.__(3, [param_0]);
}

function toBytes(param) {
  if (param !== undefined) {
    var match = param;
    switch (match.tag | 0) {
      case 0 : 
          return match[0];
      case 1 : 
          return 1024.0 * match[0] | 0;
      case 2 : 
          return 1024.0 * 1024.0 * match[0] | 0;
      case 3 : 
          return 1024.0 * 1024.0 * 1024.0 * match[0] | 0;
      
    }
  }
  
}

var ByteLimit = /* module */[
  /* b */b,
  /* kb */kb,
  /* mb */mb,
  /* gb */gb,
  /* toBytes */toBytes
];

function json($staropt$star, $staropt$star$1, limit, param) {
  var inflate = $staropt$star !== undefined ? $staropt$star : true;
  var strict = $staropt$star$1 !== undefined ? $staropt$star$1 : true;
  return Express.json({
              inflate: inflate,
              strict: strict,
              limit: toBytes(limit)
            });
}

function text($staropt$star, $staropt$star$1, $staropt$star$2, limit, param) {
  var defaultCharset = $staropt$star !== undefined ? $staropt$star : "utf-8";
  var fileType = $staropt$star$1 !== undefined ? $staropt$star$1 : "text/plain";
  var inflate = $staropt$star$2 !== undefined ? $staropt$star$2 : true;
  return BodyParser.text({
              defaultCharset: defaultCharset,
              type: fileType,
              limit: toBytes(limit),
              inflate: inflate
            });
}

function urlencoded($staropt$star, $staropt$star$1, limit, parameterLimit, param) {
  var extended = $staropt$star !== undefined ? $staropt$star : false;
  var inflate = $staropt$star$1 !== undefined ? $staropt$star$1 : true;
  return Express.urlencoded({
              inflate: inflate,
              extended: extended,
              parameterLimit: Js_null_undefined.fromOption(parameterLimit),
              limit: toBytes(limit)
            });
}

function raw($staropt$star, $staropt$star$1, limit, param) {
  var inflate = $staropt$star !== undefined ? $staropt$star : true;
  var fileType = $staropt$star$1 !== undefined ? $staropt$star$1 : "application/octet-stream";
  return BodyParser.raw({
              type: fileType,
              limit: toBytes(limit),
              inflate: inflate
            });
}

function Make(A) {
  var from = function (middleware) {
    return (function (req, res, next) {
        return Curry._4(A[/* apply */0], middleware, (function (param, param$1) {
                      return Curry._1(next, param);
                    }), req, res);
      });
  };
  var fromError = function (middleware) {
    return (function (err, req, res, next) {
        return Curry._5(A[/* applyWithError */1], middleware, (function (param, param$1) {
                      return Curry._1(next, param);
                    }), err, req, res);
      });
  };
  return /* module */[
          /* from */from,
          /* fromError */fromError
        ];
}

function from(middleware) {
  return (function (req, res, next) {
      var f = middleware;
      var next$1 = function (param, param$1) {
        return Curry._1(next, param);
      };
      var req$1 = req;
      var res$1 = res;
      try {
        Curry._3(f, next$1, req$1, res$1);
      }
      catch (raw_e){
        var e = Caml_js_exceptions.internalToOCamlException(raw_e);
        Curry._2(next$1, e, res$1);
      }
      return /* () */0;
    });
}

function fromError(middleware) {
  return (function (err, req, res, next) {
      var f = middleware;
      var next$1 = function (param, param$1) {
        return Curry._1(next, param);
      };
      var err$1 = err;
      var req$1 = req;
      var res$1 = res;
      try {
        Curry._4(f, next$1, err$1, req$1, res$1);
      }
      catch (raw_e){
        var e = Caml_js_exceptions.internalToOCamlException(raw_e);
        Curry._2(next$1, e, res$1);
      }
      return /* () */0;
    });
}

var Middleware = /* module */[
  /* json */json,
  /* text */text,
  /* urlencoded */urlencoded,
  /* raw */raw,
  /* Make */Make,
  /* from */from,
  /* fromError */fromError
];

function from$1(middleware) {
  return (function (req, res, next) {
      var f = middleware;
      var next$1 = function (param, param$1) {
        return Curry._1(next, param);
      };
      var req$1 = req;
      var res$1 = res;
      var promise;
      try {
        promise = Curry._3(f, next$1, req$1, res$1);
      }
      catch (raw_e){
        var e = Caml_js_exceptions.internalToOCamlException(raw_e);
        promise = Promise.resolve(Curry._2(next$1, e, res$1));
      }
      promise.catch((function (err) {
              return Promise.resolve(Curry._2(next$1, err, res$1));
            }));
      return /* () */0;
    });
}

function fromError$1(middleware) {
  return (function (err, req, res, next) {
      var f = middleware;
      var next$1 = function (param, param$1) {
        return Curry._1(next, param);
      };
      var err$1 = err;
      var req$1 = req;
      var res$1 = res;
      var promise;
      try {
        promise = Curry._4(f, next$1, err$1, req$1, res$1);
      }
      catch (raw_e){
        var e = Caml_js_exceptions.internalToOCamlException(raw_e);
        promise = Promise.resolve(Curry._2(next$1, e, res$1));
      }
      promise.catch((function (err) {
              return Promise.resolve(Curry._2(next$1, err, res$1));
            }));
      return /* () */0;
    });
}

var PromiseMiddleware = /* module */[
  /* from */from$1,
  /* fromError */fromError$1
];

function MakeBindFunctions(T) {
  return /* module */[
          (function (prim, prim$1) {
              prim.use(prim$1);
              return /* () */0;
            }),
          /* use */(function (prim, prim$1) {
              prim.use(prim$1);
              return /* () */0;
            }),
          /* use */(function (prim, prim$1, prim$2) {
              prim.use(prim$1, prim$2);
              return /* () */0;
            }),
          /* use */(function (prim, prim$1, prim$2) {
              prim.use(prim$1, prim$2);
              return /* () */0;
            }),
          (function (prim, prim$1, prim$2) {
              prim.get(prim$1, prim$2);
              return /* () */0;
            }),
          /* get */(function (prim, prim$1, prim$2) {
              prim.get(prim$1, prim$2);
              return /* () */0;
            }),
          (function (prim, prim$1, prim$2) {
              prim.options(prim$1, prim$2);
              return /* () */0;
            }),
          /* options */(function (prim, prim$1, prim$2) {
              prim.options(prim$1, prim$2);
              return /* () */0;
            }),
          /* param */(function (prim, prim$1, prim$2) {
              prim.param(prim$1, prim$2);
              return /* () */0;
            }),
          (function (prim, prim$1, prim$2) {
              prim.post(prim$1, prim$2);
              return /* () */0;
            }),
          /* post */(function (prim, prim$1, prim$2) {
              prim.post(prim$1, prim$2);
              return /* () */0;
            }),
          (function (prim, prim$1, prim$2) {
              prim.put(prim$1, prim$2);
              return /* () */0;
            }),
          /* put */(function (prim, prim$1, prim$2) {
              prim.put(prim$1, prim$2);
              return /* () */0;
            }),
          (function (prim, prim$1, prim$2) {
              prim.patch(prim$1, prim$2);
              return /* () */0;
            }),
          /* patch */(function (prim, prim$1, prim$2) {
              prim.patch(prim$1, prim$2);
              return /* () */0;
            }),
          (function (prim, prim$1, prim$2) {
              prim.delete(prim$1, prim$2);
              return /* () */0;
            }),
          /* delete */(function (prim, prim$1, prim$2) {
              prim.delete(prim$1, prim$2);
              return /* () */0;
            })
        ];
}

function use(prim, prim$1) {
  prim.use(prim$1);
  return /* () */0;
}

function useWithMany(prim, prim$1) {
  prim.use(prim$1);
  return /* () */0;
}

function useOnPath(prim, prim$1, prim$2) {
  prim.use(prim$1, prim$2);
  return /* () */0;
}

function useOnPathWithMany(prim, prim$1, prim$2) {
  prim.use(prim$1, prim$2);
  return /* () */0;
}

function get(prim, prim$1, prim$2) {
  prim.get(prim$1, prim$2);
  return /* () */0;
}

function getWithMany(prim, prim$1, prim$2) {
  prim.get(prim$1, prim$2);
  return /* () */0;
}

function options(prim, prim$1, prim$2) {
  prim.options(prim$1, prim$2);
  return /* () */0;
}

function optionsWithMany(prim, prim$1, prim$2) {
  prim.options(prim$1, prim$2);
  return /* () */0;
}

function param(prim, prim$1, prim$2) {
  prim.param(prim$1, prim$2);
  return /* () */0;
}

function post(prim, prim$1, prim$2) {
  prim.post(prim$1, prim$2);
  return /* () */0;
}

function postWithMany(prim, prim$1, prim$2) {
  prim.post(prim$1, prim$2);
  return /* () */0;
}

function put(prim, prim$1, prim$2) {
  prim.put(prim$1, prim$2);
  return /* () */0;
}

function putWithMany(prim, prim$1, prim$2) {
  prim.put(prim$1, prim$2);
  return /* () */0;
}

function patch(prim, prim$1, prim$2) {
  prim.patch(prim$1, prim$2);
  return /* () */0;
}

function patchWithMany(prim, prim$1, prim$2) {
  prim.patch(prim$1, prim$2);
  return /* () */0;
}

function $$delete(prim, prim$1, prim$2) {
  prim.delete(prim$1, prim$2);
  return /* () */0;
}

function deleteWithMany(prim, prim$1, prim$2) {
  prim.delete(prim$1, prim$2);
  return /* () */0;
}

function make($staropt$star, $staropt$star$1, $staropt$star$2, param) {
  var caseSensitive = $staropt$star !== undefined ? $staropt$star : false;
  var mergeParams = $staropt$star$1 !== undefined ? $staropt$star$1 : false;
  var strict = $staropt$star$2 !== undefined ? $staropt$star$2 : false;
  return Express.Router({
              caseSensitive: caseSensitive,
              mergeParams: mergeParams,
              strict: strict
            });
}

var Router = /* module */[
  /* use */use,
  /* useWithMany */useWithMany,
  /* useOnPath */useOnPath,
  /* useOnPathWithMany */useOnPathWithMany,
  /* get */get,
  /* getWithMany */getWithMany,
  /* options */options,
  /* optionsWithMany */optionsWithMany,
  /* param */param,
  /* post */post,
  /* postWithMany */postWithMany,
  /* put */put,
  /* putWithMany */putWithMany,
  /* patch */patch,
  /* patchWithMany */patchWithMany,
  /* delete */$$delete,
  /* deleteWithMany */deleteWithMany,
  /* make */make
];

var HttpServer = /* module */[];

function use$1(prim, prim$1) {
  prim.use(prim$1);
  return /* () */0;
}

function useWithMany$1(prim, prim$1) {
  prim.use(prim$1);
  return /* () */0;
}

function useOnPath$1(prim, prim$1, prim$2) {
  prim.use(prim$1, prim$2);
  return /* () */0;
}

function useOnPathWithMany$1(prim, prim$1, prim$2) {
  prim.use(prim$1, prim$2);
  return /* () */0;
}

function get$1(prim, prim$1, prim$2) {
  prim.get(prim$1, prim$2);
  return /* () */0;
}

function getWithMany$1(prim, prim$1, prim$2) {
  prim.get(prim$1, prim$2);
  return /* () */0;
}

function options$1(prim, prim$1, prim$2) {
  prim.options(prim$1, prim$2);
  return /* () */0;
}

function optionsWithMany$1(prim, prim$1, prim$2) {
  prim.options(prim$1, prim$2);
  return /* () */0;
}

function param$1(prim, prim$1, prim$2) {
  prim.param(prim$1, prim$2);
  return /* () */0;
}

function post$1(prim, prim$1, prim$2) {
  prim.post(prim$1, prim$2);
  return /* () */0;
}

function postWithMany$1(prim, prim$1, prim$2) {
  prim.post(prim$1, prim$2);
  return /* () */0;
}

function put$1(prim, prim$1, prim$2) {
  prim.put(prim$1, prim$2);
  return /* () */0;
}

function putWithMany$1(prim, prim$1, prim$2) {
  prim.put(prim$1, prim$2);
  return /* () */0;
}

function patch$1(prim, prim$1, prim$2) {
  prim.patch(prim$1, prim$2);
  return /* () */0;
}

function patchWithMany$1(prim, prim$1, prim$2) {
  prim.patch(prim$1, prim$2);
  return /* () */0;
}

function $$delete$1(prim, prim$1, prim$2) {
  prim.delete(prim$1, prim$2);
  return /* () */0;
}

function deleteWithMany$1(prim, prim$1, prim$2) {
  prim.delete(prim$1, prim$2);
  return /* () */0;
}

function useRouter(app, router) {
  app.use(router);
  return /* () */0;
}

var useRouterOnPath = useOnPath$1;

function listen(app, $staropt$star, $staropt$star$1, param) {
  var port = $staropt$star !== undefined ? $staropt$star : 3000;
  var onListen = $staropt$star$1 !== undefined ? $staropt$star$1 : (function (param) {
        return /* () */0;
      });
  return app.listen(port, Curry.__1(onListen));
}

var App = /* module */[
  /* use */use$1,
  /* useWithMany */useWithMany$1,
  /* useOnPath */useOnPath$1,
  /* useOnPathWithMany */useOnPathWithMany$1,
  /* get */get$1,
  /* getWithMany */getWithMany$1,
  /* options */options$1,
  /* optionsWithMany */optionsWithMany$1,
  /* param */param$1,
  /* post */post$1,
  /* postWithMany */postWithMany$1,
  /* put */put$1,
  /* putWithMany */putWithMany$1,
  /* patch */patch$1,
  /* patchWithMany */patchWithMany$1,
  /* delete */$$delete$1,
  /* deleteWithMany */deleteWithMany$1,
  /* useRouter */useRouter,
  /* useRouterOnPath */useRouterOnPath,
  /* listen */listen
];

function express(prim) {
  return Express();
}

function defaultOptions(param) {
  return { };
}

var Static = /* module */[/* defaultOptions */defaultOptions];

var router = make;

exports.$$Error = $$Error;
exports.$$Request = $$Request;
exports.$$Response = $$Response;
exports.Next = Next;
exports.ByteLimit = ByteLimit;
exports.Middleware = Middleware;
exports.PromiseMiddleware = PromiseMiddleware;
exports.MakeBindFunctions = MakeBindFunctions;
exports.Router = Router;
exports.router = router;
exports.HttpServer = HttpServer;
exports.App = App;
exports.express = express;
exports.Static = Static;
/* express Not a pure module */
