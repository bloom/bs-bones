// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Prom = require("bs-prom/src/Prom.bs.js");

function sendBuffer(prim, prim$1) {
  return prim.send(prim$1);
}

function stringField(prim, prim$1, prim$2) {
  return prim.field(prim$1, prim$2);
}

function attachBuffer(builder, name, buff, contentType) {
  return builder.attach(name, buff, {
              filename: name,
              contentType: contentType
            });
}

function attachJsonAsFile(builder, name, payload) {
  return attachBuffer(builder, name, Buffer.from(JSON.stringify(payload)), "application/json");
}

var $$Blob = /* module */[];

function attachJsonAsFile$1(builder, name, payload) {
  return builder.attach(name, new Blob(/* array */[JSON.stringify(payload)]), {
              filename: name,
              contentType: "application/json"
            });
}

var Browser = /* module */[
  /* Blob */$$Blob,
  /* attachJsonAsFile */attachJsonAsFile$1
];

function toPromise(r) {
  return Prom.mapError(r, (function (e) {
                return /* record */[
                        /* status */e.status,
                        /* message */e.message
                      ];
              }));
}

function toPromiseExpectBinary(r) {
  return Prom.mapError(r, (function (e) {
                return /* record */[
                        /* status */e.status,
                        /* message */e.message
                      ];
              }));
}

var finish = toPromise;

var finishBinary = toPromiseExpectBinary;

exports.sendBuffer = sendBuffer;
exports.stringField = stringField;
exports.attachBuffer = attachBuffer;
exports.attachJsonAsFile = attachJsonAsFile;
exports.Browser = Browser;
exports.toPromise = toPromise;
exports.toPromiseExpectBinary = toPromiseExpectBinary;
exports.finish = finish;
exports.finishBinary = finishBinary;
/* No side effect */
